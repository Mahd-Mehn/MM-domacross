"""removed participant token holding

Revision ID: fc8b13fe445e
Revises: ef1ac4e17be8
Create Date: 2025-09-05 23:52:04.258439

"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'fc8b13fe445e'
down_revision = 'ef1ac4e17be8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chain_ingest_state')
    op.drop_index(op.f('ix_participant_token_holdings_id'), table_name='participant_token_holdings')
    op.drop_index(op.f('ix_participant_token_holdings_participant_id'), table_name='participant_token_holdings')
    op.drop_index(op.f('ix_participant_token_holdings_token_contract'), table_name='participant_token_holdings')
    op.drop_index(op.f('ix_participant_token_holdings_token_id'), table_name='participant_token_holdings')
    op.drop_index(op.f('ix_participant_token_holdings_updated_at'), table_name='participant_token_holdings')
    op.drop_table('participant_token_holdings')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participant_token_holdings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_contract', sa.VARCHAR(length=42), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=24, scale=8), autoincrement=False, nullable=False),
    sa.Column('avg_cost', sa.NUMERIC(precision=24, scale=8), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('participant_token_holdings_participant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('participant_token_holdings_pkey')),
    sa.UniqueConstraint('participant_id', 'token_contract', 'token_id', name=op.f('uq_participant_token_holding'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_participant_token_holdings_updated_at'), 'participant_token_holdings', ['updated_at'], unique=False)
    op.create_index(op.f('ix_participant_token_holdings_token_id'), 'participant_token_holdings', ['token_id'], unique=False)
    op.create_index(op.f('ix_participant_token_holdings_token_contract'), 'participant_token_holdings', ['token_contract'], unique=False)
    op.create_index(op.f('ix_participant_token_holdings_participant_id'), 'participant_token_holdings', ['participant_id'], unique=False)
    op.create_index(op.f('ix_participant_token_holdings_id'), 'participant_token_holdings', ['id'], unique=False)
    op.create_table('chain_ingest_state',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('last_block', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_hash', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('chain_ingest_state_pkey'))
    )
    # ### end Alembic commands ###
